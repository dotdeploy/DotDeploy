#!/bin/bash

#
# dotdeploy - dispatcher script
# 
# 
SCRIPT_NAME=$(echo $0 | rev | cut -d/ -f1 | rev)
DOTDEPLOY_DIRECTORY="$HOME/.dotdeploy"
MACHINE_UUID=$(cat $DOTDEPLOY_DIRECTORY/.machine_uuiid)

function print_usage {
    if [ -n "$1" ]
    then
        echo ERROR: $1
        echo
    fi
 
    echo -e "\e[01;1mdotdeploy v0.1\e[00m
Machine ID: \e[01;1m$MACHINE_UUID\e[00m   
    
Usage:
    $SCRIPT_NAME \e[01;1m<command> [arguments...]\e[00m 
  
Description:
    See http://dotdeploy.works for more information and how to get started. 
  
Commands: 
    $SCRIPT_NAME \e[01;1mhelp\e[00m - Displays $0 help.
    $SCRIPT_NAME \e[01;1madd <filename> [profile]\e[00m - Adds a file for remote tracking.
    $SCRIPT_NAME \e[01;1mupdate\e[00m  - Updates all files. 
    $SCRIPT_NAME \e[01;1mstatus [filename]\e[00m  - Prints tracking status of this machine or file. 
    $SCRIPT_NAME \e[01;1muninstall\e[00m - Stops tracking this machine and restores original files.
    $SCRIPT_NAME \e[01;1mname [name]\e[00m - Sets the name of this machine."
}


## check that dotdeploy files are correctly setup
if [ ! -d $DOTDEPLOY_DIRECTORY/lib ] 
then
    print_usage 
    echo
    echo -e "\e[01;31m[error]\e[00m - dotdeploy is not installed in $HOME. Please visit http://dotdeploy.works for installation instructions."
    exit 1
fi 

## now that we know dotdeploy is instaled, proceed. 
source $DOTDEPLOY_DIRECTORY/lib/httpClient.sh
source $DOTDEPLOY_DIRECTORY/lib/logHelper.sh
source $DOTDEPLOY_DIRECTORY/lib/fileMetadataStore.sh

command=$1
   
case "$command" in
    ''|help)
        print_usage
        ;;
    
    add)
        if [ -z $2 ]
        then
            logError "Invalid usage, no file specified to add."
            echo
            exit 1
        fi
        
        logInfo ""
        ;;
        
    update)
        logInfo "Invoking poller ... "
        $DOTDEPLOY_DIRECTORY/lib/poller.sh
        if [ $? -eq 0 ]
        then
            logSuccess "[ok]"
        else 
            logError "[failed]"
        fi
        echo
        ;;
    
    status)
        metaData=$(getMetadataForPath $2)
        
        if [ $? -eq 0 ]
        then
            logBold $2
            echo " is being tracked. Metadata included below:"
            logInfo $metaData
            echo
        else
            logBold $2
            echo " is not being tracked. Run the following command to add it: " 
            logBold "    $ $SCRIPT_NAME add $2"
            echo
        fi
        ;;
        
    uninstall)
        echo "not implemented"
        ;;
        
    setname)
        echo "not implemented"
        ;;
esac
